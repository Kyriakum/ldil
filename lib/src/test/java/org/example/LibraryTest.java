/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;

import com.kyriakum.ldil.core.Injector;
import com.kyriakum.ldil.core.providers.DependencyProvider;
import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.*;

public class LibraryTest {

    private Injector injector;
    @Before
    public void setupInjector(){
        DependencyProvider dependencyProvider = new DependencyProvider();
        injector = new Injector(dependencyProvider);
        injector.getMappingService().bindClassToClass(TestInterface.class, TestConcrete.class);
        injector.getMappingService().bindClassToClass(TestConcreteSingleton.class, TestConcreteSingleton.class);
    }

    @Test public void basicFieldInjection() {
        TestObject obj = injector.createInstance(TestObject.class);
        assertEquals(obj.getString(), "Hello World!");
     }

    @Test public void testPrototypeInstantiation(){
        TestObject obj = injector.createInstance(TestObject.class);
        TestObject obj2 = injector.createInstance(TestObject.class);
        assertNotEquals(obj.getTestInterface(), obj2.getTestInterface());
    }


    @Test public void testSingletonInstantiation(){
        TestObject obj = injector.createInstance(TestObject.class);
        TestObject obj2 = injector.createInstance(TestObject.class);
        assertEquals(obj.getTestConcreteSingleton(), obj2.getTestConcreteSingleton());
    }
}
